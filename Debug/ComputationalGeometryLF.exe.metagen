  ComputationalGeometryLF.MainForm.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v4.0.30319
Assembly ComputationalGeometryLF, Version=0.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class CVNetControls.RectangularBorder: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Drawing.Color, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color ColorDisabled 'get set' : 
    System.Drawing.Color Color 'get set' : 
    Int32 Thickness 'get set' : 
    Boolean IsSimple 'get ' : 
    Boolean IsNone 'get ' : 
  Methods:
    get_IsNone(): PrivateScope, Public, HideBySig, SpecialName
    get_IsSimple(): PrivateScope, Public, HideBySig, SpecialName
    get_Thickness(): PrivateScope, Public, HideBySig, SpecialName
    set_Thickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Color(): PrivateScope, Public, HideBySig, SpecialName
    set_Color(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    linkToControl(Control): PrivateScope, Public, HideBySig
    unlinkFromControl(Control): PrivateScope, Public, HideBySig
    setNone(): PrivateScope, Public, HideBySig
    setSimple(Color, Int32): PrivateScope, Public, HideBySig
    setSimple(Color): PrivateScope, Public, HideBySig
    setSimple(): PrivateScope, Public, HideBySig
Class CVNetControls.DynamicControl: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    interpretAs<CVNetControls::LabelButton>(): PrivateScope, Public, HideBySig
    interpretAs<CVNetControls::SingleCheckBox>(): PrivateScope, Public, HideBySig
    interpretAs<CVNetControls::TitledCheckBox>(): PrivateScope, Public, HideBySig
    interpretAs<CVNetControls::TitledLabel>(): PrivateScope, Public, HideBySig
    interpretAs<CVNetControls::TitledTextBox>(): PrivateScope, Public, HideBySig
    fetchWinControl(): PrivateScope, Public, HideBySig
    interpretAs<CVNetControls::TitledControl<System::Windows::Forms::Panel> >(): PrivateScope, Public, HideBySig
Class CVNetControls.DynamicControlPostEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(DynamicControl): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(DynamicControl, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class CVNetControls.DynamicControlPreEventHandler: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(DynamicControl, Boolean&): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(DynamicControl, Boolean&, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(Boolean&, IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Interface CVNetControls.IDynamicList: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Properties:
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class CVNetControls.DynamicControlCollection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Int32 ControlTitledLists 'get ' : 
    Int32 ControlSingleLists 'get ' : 
    Int32 SingleControls 'get ' : 
    Int32 TitledControls 'get ' : 
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TitledControls(): PrivateScope, Public, HideBySig, SpecialName
    get_SingleControls(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlSingleLists(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTitledLists(): PrivateScope, Public, HideBySig, SpecialName
    add(DynamicControl): PrivateScope, Public, HideBySig
    insertAt(Int32, DynamicControl): PrivateScope, Public, HideBySig
    removeAt(Int32): PrivateScope, Public, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    getAt(Int32): PrivateScope, Public, HideBySig
    interpretControlAs<CVNetControls::LabelButton>(Int32): PrivateScope, Public, HideBySig
    interpretControlAs<CVNetControls::SingleCheckBox>(Int32): PrivateScope, Public, HideBySig
    interpretControlAs<CVNetControls::TitledCheckBox>(Int32): PrivateScope, Public, HideBySig
    interpretControlAs<CVNetControls::TitledLabel>(Int32): PrivateScope, Public, HideBySig
    interpretControlAs<CVNetControls::TitledTextBox>(Int32): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    interpretControlAs<CVNetControls::TitledControl<System::Windows::Forms::Panel> >(Int32): PrivateScope, Public, HideBySig
Class CVNetControls.DynamicControlAligner: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 ControlTitledLists 'get ' : 
    Int32 ControlSingleLists 'get ' : 
    Int32 SingleControls 'get ' : 
    Int32 TitledControls 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_TitledControls(): PrivateScope, Public, HideBySig, SpecialName
    get_SingleControls(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlSingleLists(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTitledLists(): PrivateScope, Public, HideBySig, SpecialName
    addControl(DynamicControl): PrivateScope, Public, HideBySig
    addControl(Control): PrivateScope, Public, HideBySig
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, HideBySig
Class CVNetControls.SingleControl<System::Windows::Forms::Control>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    System.Drawing.Color ForeColor 'get set' : 
    System.Drawing.Color BackColor 'get set' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean AutoSize 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Font Font 'get set' : 
    System.String Text 'get set' : 
    System.String Name 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get set' : 
    Int32 Width 'get set' : 
    System.Drawing.Size PreferredSize 'get ' : 
    System.Drawing.Size Size 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Size(Size): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_BackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
    setWinControl(Control): PrivateScope, Public, HideBySig
Class CVNetControls.SingleControl<System::Windows::Forms::Label>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    System.Drawing.Color ForeColor 'get set' : 
    System.Drawing.Color BackColor 'get set' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean AutoSize 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Font Font 'get set' : 
    System.String Text 'get set' : 
    System.String Name 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get set' : 
    Int32 Width 'get set' : 
    System.Drawing.Size PreferredSize 'get ' : 
    System.Drawing.Size Size 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Size(Size): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_BackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.LabelButton: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SingleControl<System::Windows::Forms::Label>
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color BorderColorDisabled 'get set' : 
    System.Drawing.Color BorderColor 'get set' : 
    Int32 BorderThickness 'get set' : 
    CVNetControls.RectangularBorder BorderStyle 'get set' : 
    System.Drawing.Color ForeColorDisabled 'get set' : 
    System.Drawing.Color BackColorDisabled 'get set' : 
    System.Drawing.Color ForeColorActiveMouseOver 'get set' : 
    System.Drawing.Color BackColorActiveMouseOver 'get set' : 
    System.Drawing.Color ForeColorActive 'get set' : 
    System.Drawing.Color BackColorActive 'get set' : 
    System.Drawing.Color ForeColorMouseOver 'get set' : 
    System.Drawing.Color BackColorMouseOver 'get set' : 
    System.Drawing.Color ForeColorNormal 'get set' : 
    System.Drawing.Color BackColorNormal 'get set' : 
    Boolean OnClickDeactivatable 'get set' : 
    Boolean ColorableActivation 'get set' : 
    Boolean ColorableMouseOver 'get set' : 
    Boolean ActivatedOnHold 'get set' : 
    Boolean ActivatedOnClick 'get set' : 
    Boolean MousedOverAndColorable 'get ' : 
    Boolean ActivatedAndColorable 'get ' : 
    Boolean Activated 'get ' : 
    Boolean IsMouseHovering 'get ' : 
    Boolean IsMouseWithinBounds 'get ' : 
    Boolean IsMouseMoving 'get ' : 
    Boolean IsMouseDown 'get ' : 
    System.Drawing.ContentAlignment TextAlign 'get set' : 
  Methods:
    get_TextAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_IsMouseDown(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMouseMoving(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMouseWithinBounds(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMouseHovering(): PrivateScope, Public, HideBySig, SpecialName
    get_Activated(): PrivateScope, Public, HideBySig, SpecialName
    get_ActivatedAndColorable(): PrivateScope, Public, HideBySig, SpecialName
    get_MousedOverAndColorable(): PrivateScope, Public, HideBySig, SpecialName
    get_ActivatedOnClick(): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnClick(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ActivatedOnHold(): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnHold(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ColorableMouseOver(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableMouseOver(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ColorableActivation(): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableActivation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OnClickDeactivatable(): PrivateScope, Public, HideBySig, SpecialName
    set_OnClickDeactivatable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_BackColorNormal(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColorNormal(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BackColorMouseOver(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColorMouseOver(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BackColorActive(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColorActive(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BackColorActiveMouseOver(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColorActiveMouseOver(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BackColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    activate(): PrivateScope, Public, HideBySig
    deactivate(): PrivateScope, Public, HideBySig
    addMouseDownEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    addMouseUpEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    addMouseMoveEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    addMouseEnterEvent(EventHandler): PrivateScope, Public, HideBySig
    addMouseLeaveEvent(EventHandler): PrivateScope, Public, HideBySig
    addMouseHoverEvent(EventHandler): PrivateScope, Public, HideBySig
    toLabel(): PrivateScope, Public, HideBySig
Class CVNetControls.SecondaryForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(CVNetControls.LabelButton): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsModal 'get set' : 
    Boolean IsShown 'get set' : 
  Methods:
    get_IsShown(): PrivateScope, Public, HideBySig, SpecialName
    get_IsModal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsModal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    display(): PrivateScope, Public, HideBySig
    closeIfShown(): PrivateScope, Public, HideBySig
Class CVNetControls.ControlSingleList<CVNetControls::LabelButton>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(LabelButton): PrivateScope, Public, HideBySig
    insertAt(Int32, LabelButton): PrivateScope, Public, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.LabelButtonList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlSingleList<CVNetControls::LabelButton>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Drawing.Color ForeColorDisabled 'set' : 
    System.Drawing.Color BackColorDisabled 'set' : 
    System.Drawing.Color ForeColorActiveMouseOver 'set' : 
    System.Drawing.Color BackColorActiveMouseOver 'set' : 
    System.Drawing.Color ForeColorActive 'set' : 
    System.Drawing.Color BackColorActive 'set' : 
    System.Drawing.Color ForeColorMouseOver 'set' : 
    System.Drawing.Color BackColorMouseOver 'set' : 
    System.Drawing.Color ForeColorNormal 'set' : 
    System.Drawing.Color BackColorNormal 'set' : 
    Boolean OnClickDeactivatable 'set' : 
    Boolean ColorableActivation 'set' : 
    Boolean ColorableMouseOver 'set' : 
    Boolean ActivatedOnHold 'set' : 
    Boolean ActivatedOnClick 'set' : 
    System.Drawing.ContentAlignment TextAlign 'set' : 
    Boolean AutoSize 'set' : 
    System.Drawing.Font Font 'set' : 
  Methods:
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnClick(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnHold(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableMouseOver(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableActivation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_OnClickDeactivatable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    addButton(String, String): PrivateScope, Public, HideBySig
    insertButton(Int32, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.ColorFactory: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Scale(Color, Single): PrivateScope, Public, Static, HideBySig
Class CVNetControls.NumericLimiter<float>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    min(Single, Single): PrivateScope, Public, Static, HideBySig
    minMax(Single, Single, Single): PrivateScope, Public, Static, HideBySig
Class CVNetControls.SimpleBox: AutoLayout, AnsiClass, Class, Public, Abstract
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Icon BoxIcon 'get set' : 
    CVNetControls.LabelButtonList ButtonCollection 'get ' : 
    Boolean IsShown 'get ' : 
    System.String CancelText 'get set' : 
    System.String ConfirmText 'get set' : 
    System.Drawing.Font ButtonsFont 'get set' : 
    System.Drawing.Font InfoFont 'get set' : 
    System.Drawing.Color ButtonForeColorMouseOver 'get set' : 
    System.Drawing.Color ButtonBackColorMouseOver 'get set' : 
    System.Drawing.Color ButtonForeColorNormal 'get set' : 
    System.Drawing.Color ButtonBackColorNormal 'get set' : 
    System.Drawing.Color ForeColor 'get set' : 
    System.Drawing.Color BackColor 'get set' : 
  Methods:
    get_BackColor(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_BackColor(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ForeColor(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ForeColor(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonBackColorNormal(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ButtonBackColorNormal(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonForeColorNormal(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ButtonForeColorNormal(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonBackColorMouseOver(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ButtonBackColorMouseOver(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonForeColorMouseOver(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ButtonForeColorMouseOver(Color): PrivateScope, Public, Static, HideBySig, SpecialName
    get_InfoFont(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_InfoFont(Font): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonsFont(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ButtonsFont(Font): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ConfirmText(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_ConfirmText(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_CancelText(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_CancelText(String): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsShown(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ButtonCollection(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_BoxIcon(): PrivateScope, Public, Static, HideBySig, SpecialName
    set_BoxIcon(Icon): PrivateScope, Public, Static, HideBySig, SpecialName
    display(DynamicControlCollection, String): PrivateScope, Public, Static, HideBySig
    display(DynamicControlCollection): PrivateScope, Public, Static, HideBySig
    display(String[], String): PrivateScope, Public, Static, HideBySig
    display(String, String): PrivateScope, Public, Static, HideBySig
    display(String[]): PrivateScope, Public, Static, HideBySig
    display(String): PrivateScope, Public, Static, HideBySig
    displayWithResult(String[], String): PrivateScope, Public, Static, HideBySig
    displayWithResult(String, String): PrivateScope, Public, Static, HideBySig
    displayWithResult(String[]): PrivateScope, Public, Static, HideBySig
    displayWithResult(String): PrivateScope, Public, Static, HideBySig
    close(): PrivateScope, Public, Static, HideBySig
Class CVNetControls.LabelButtonScheme: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invert(ControlTitledList<CVNetControls::LabelButton>, Boolean(HasFieldMarshal), Color, Color, Single): PrivateScope, Public, Static, HideBySig
    Invert(ControlSingleList<CVNetControls::LabelButton>, Boolean(HasFieldMarshal), Color, Color, Single): PrivateScope, Public, Static, HideBySig
    Invert(LabelButton, Boolean(HasFieldMarshal), Color, Color, Single): PrivateScope, Public, Static, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::LabelButton> >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::LabelButton>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::LabelButton> >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(LabelButton): PrivateScope, Public, HideBySig
    insertAt(Int32, LabelButton): PrivateScope, Public, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
Class CVNetControls.LabelButtonTitledList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlTitledList<CVNetControls::LabelButton>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Drawing.Color ForeColorDisabled 'set' : 
    System.Drawing.Color BackColorDisabled 'set' : 
    System.Drawing.Color ForeColorActiveMouseOver 'set' : 
    System.Drawing.Color BackColorActiveMouseOver 'set' : 
    System.Drawing.Color ForeColorActive 'set' : 
    System.Drawing.Color BackColorActive 'set' : 
    System.Drawing.Color ForeColorMouseOver 'set' : 
    System.Drawing.Color BackColorMouseOver 'set' : 
    System.Drawing.Color ForeColorNormal 'set' : 
    System.Drawing.Color BackColorNormal 'set' : 
    Boolean OnClickDeactivatable 'set' : 
    Boolean ColorableActivation 'set' : 
    Boolean ColorableMouseOver 'set' : 
    Boolean ActivatedOnHold 'set' : 
    Boolean ActivatedOnClick 'set' : 
    System.Drawing.ContentAlignment TextAlign 'set' : 
    Boolean AutoSize 'set' : 
    System.Drawing.Font Font 'set' : 
  Methods:
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnClick(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ActivatedOnHold(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableMouseOver(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ColorableActivation(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_OnClickDeactivatable(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorNormal(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActive(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorActiveMouseOver(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BackColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    addButton(String, String): PrivateScope, Public, HideBySig
    insertButton(Int32, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.SingleControl<System::Windows::Forms::PictureBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    System.Drawing.Color ForeColor 'get set' : 
    System.Drawing.Color BackColor 'get set' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean AutoSize 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Font Font 'get set' : 
    System.String Text 'get set' : 
    System.String Name 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get set' : 
    Int32 Width 'get set' : 
    System.Drawing.Size PreferredSize 'get ' : 
    System.Drawing.Size Size 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Size(Size): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_BackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.SingleCheckBox: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SingleControl<System::Windows::Forms::PictureBox>
    Void .ctor(System.Windows.Forms.Control, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color BorderColorDisabled 'get set' : 
    System.Drawing.Color BorderColor 'get set' : 
    Int32 BorderThickness 'get set' : 
    CVNetControls.RectangularBorder BorderStyle 'get set' : 
    Int32 CheckOffset 'get set' : 
    Boolean Checked 'get set' : 
  Methods:
    get_Checked(): PrivateScope, Public, HideBySig, SpecialName
    set_Checked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    addMouseDownEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    toPictureBox(): PrivateScope, Public, HideBySig
Class CVNetControls.ControlSingleList<CVNetControls::SingleCheckBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(SingleCheckBox): PrivateScope, Public, HideBySig
    insertAt(Int32, SingleCheckBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
Class CVNetControls.SingleCheckBoxList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlSingleList<CVNetControls::SingleCheckBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CheckedIndex 'get ' : 
    Boolean Locked 'get set' : 
    Boolean MultiSelection 'get ' : 
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    Int32 CheckOffset 'set' : 
  Methods:
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSelection(): PrivateScope, Public, HideBySig, SpecialName
    get_Locked(): PrivateScope, Public, HideBySig, SpecialName
    set_Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckedIndex(): PrivateScope, Public, HideBySig, SpecialName
    addCheckBox(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    insertCheckBox(Int32, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    disableMultiSelection(Int32): PrivateScope, Public, HideBySig
    singleSelection(Int32): PrivateScope, Public, HideBySig
    enableMultiSelection(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::SingleCheckBox> >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::SingleCheckBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::SingleCheckBox> >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(SingleCheckBox): PrivateScope, Public, HideBySig
    insertAt(Int32, SingleCheckBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.SingleCheckBoxTitledList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlTitledList<CVNetControls::SingleCheckBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CheckedIndex 'get ' : 
    Boolean Locked 'get set' : 
    Boolean MultiSelection 'get ' : 
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    Int32 CheckOffset 'set' : 
  Methods:
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSelection(): PrivateScope, Public, HideBySig, SpecialName
    get_Locked(): PrivateScope, Public, HideBySig, SpecialName
    set_Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckedIndex(): PrivateScope, Public, HideBySig, SpecialName
    addCheckBox(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    insertCheckBox(Int32, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    disableMultiSelection(Int32): PrivateScope, Public, HideBySig
    singleSelection(Int32): PrivateScope, Public, HideBySig
    enableMultiSelection(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<System::Windows::Forms::PictureBox>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.TitledControl<System::Windows::Forms::PictureBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<System::Windows::Forms::PictureBox>
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean ControlAutoSize 'get set' : 
    System.Drawing.Color ControlForeColor 'get set' : 
    System.Drawing.Color ControlBackColor 'get set' : 
    System.Drawing.Font ControlFont 'get set' : 
    System.String ControlText 'get set' : 
    System.Drawing.Size ControlPreferredSize 'get ' : 
    System.String ControlName 'get ' : 
    System.String TitleName 'get ' : 
    System.String Name 'get set' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 ControlHeight 'get set' : 
    Int32 ControlWidth 'get set' : 
    System.Drawing.Size ControlSize 'get set' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlText(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlText(String): PrivateScope, Public, HideBySig, SpecialName
    get_ControlFont(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlAutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledCheckBox: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControl<System::Windows::Forms::PictureBox>
    Void .ctor(System.Windows.Forms.Control, System.String, System.String, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Color BorderColorDisabled 'get set' : 
    System.Drawing.Color BorderColor 'get set' : 
    Int32 BorderThickness 'get set' : 
    CVNetControls.RectangularBorder BorderStyle 'get set' : 
    Int32 CheckOffset 'get set' : 
    Boolean Checked 'get set' : 
  Methods:
    get_Checked(): PrivateScope, Public, HideBySig, SpecialName
    set_Checked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckOffset(): PrivateScope, Public, HideBySig, SpecialName
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    addMouseDownEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    toPictureBox(): PrivateScope, Public, HideBySig
Class CVNetControls.ControlSingleList<CVNetControls::TitledCheckBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledCheckBox): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledCheckBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledCheckBoxList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlSingleList<CVNetControls::TitledCheckBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CheckedIndex 'get ' : 
    Boolean Locked 'get set' : 
    Boolean MultiSelection 'get ' : 
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    Int32 CheckOffset 'set' : 
  Methods:
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSelection(): PrivateScope, Public, HideBySig, SpecialName
    get_Locked(): PrivateScope, Public, HideBySig, SpecialName
    set_Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckedIndex(): PrivateScope, Public, HideBySig, SpecialName
    addCheckBox(String, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    insertCheckBox(Int32, String, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    disableMultiSelection(Int32): PrivateScope, Public, HideBySig
    singleSelection(Int32): PrivateScope, Public, HideBySig
    enableMultiSelection(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledCheckBox> >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::TitledCheckBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledCheckBox> >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledCheckBox): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledCheckBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    performLayout(): PrivateScope, Public, HideBySig
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledCheckBoxTitledList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlTitledList<CVNetControls::TitledCheckBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 CheckedIndex 'get ' : 
    Boolean Locked 'get set' : 
    Boolean MultiSelection 'get ' : 
    System.Drawing.Color BorderColorDisabled 'set' : 
    System.Drawing.Color BorderColor 'set' : 
    Int32 BorderThickness 'set' : 
    CVNetControls.RectangularBorder BorderStyle 'set' : 
    System.Windows.Forms.Cursor Cursor 'set' : 
    Int32 CheckOffset 'set' : 
  Methods:
    set_CheckOffset(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_MultiSelection(): PrivateScope, Public, HideBySig, SpecialName
    get_Locked(): PrivateScope, Public, HideBySig, SpecialName
    set_Locked(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_CheckedIndex(): PrivateScope, Public, HideBySig, SpecialName
    addCheckBox(String, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    insertCheckBox(Int32, String, String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    disableMultiSelection(Int32): PrivateScope, Public, HideBySig
    singleSelection(Int32): PrivateScope, Public, HideBySig
    enableMultiSelection(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<System::Windows::Forms::Label>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.TitledControl<System::Windows::Forms::Label>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<System::Windows::Forms::Label>
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean ControlAutoSize 'get set' : 
    System.Drawing.Color ControlForeColor 'get set' : 
    System.Drawing.Color ControlBackColor 'get set' : 
    System.Drawing.Font ControlFont 'get set' : 
    System.String ControlText 'get set' : 
    System.Drawing.Size ControlPreferredSize 'get ' : 
    System.String ControlName 'get ' : 
    System.String TitleName 'get ' : 
    System.String Name 'get set' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 ControlHeight 'get set' : 
    Int32 ControlWidth 'get set' : 
    System.Drawing.Size ControlSize 'get set' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlText(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlText(String): PrivateScope, Public, HideBySig, SpecialName
    get_ControlFont(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlAutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledLabel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControl<System::Windows::Forms::Label>
    Void .ctor(System.Windows.Forms.Control, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.BorderStyle BorderStyle 'get set' : 
    System.Drawing.ContentAlignment TextAlign 'get set' : 
  Methods:
    get_TextAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    toLabel(): PrivateScope, Public, HideBySig
Class CVNetControls.ControlSingleList<CVNetControls::TitledLabel>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledLabel): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledLabel): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledLabelList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlSingleList<CVNetControls::TitledLabel>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Windows.Forms.BorderStyle BorderStyle 'set' : 
    System.Drawing.ContentAlignment TextAlign 'set' : 
    Boolean ControlAutoSize 'set' : 
    System.Drawing.Font ControlFont 'set' : 
    System.Drawing.Font TitleFont 'set' : 
  Methods:
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    addLabel(String, String, String): PrivateScope, Public, HideBySig
    insertLabel(Int32, String, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledLabel> >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::TitledLabel>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledLabel> >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledLabel): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledLabel): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledLabelTitledList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlTitledList<CVNetControls::TitledLabel>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Windows.Forms.BorderStyle BorderStyle 'set' : 
    System.Drawing.ContentAlignment TextAlign 'set' : 
    Boolean ControlAutoSize 'set' : 
    System.Drawing.Font ControlFont 'set' : 
    System.Drawing.Font TitleFont 'set' : 
  Methods:
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(ContentAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    addLabel(String, String, String): PrivateScope, Public, HideBySig
    insertLabel(Int32, String, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<System::Windows::Forms::TextBox>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.TitledControl<System::Windows::Forms::TextBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<System::Windows::Forms::TextBox>
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean ControlAutoSize 'get set' : 
    System.Drawing.Color ControlForeColor 'get set' : 
    System.Drawing.Color ControlBackColor 'get set' : 
    System.Drawing.Font ControlFont 'get set' : 
    System.String ControlText 'get set' : 
    System.Drawing.Size ControlPreferredSize 'get ' : 
    System.String ControlName 'get ' : 
    System.String TitleName 'get ' : 
    System.String Name 'get set' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 ControlHeight 'get set' : 
    Int32 ControlWidth 'get set' : 
    System.Drawing.Size ControlSize 'get set' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlText(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlText(String): PrivateScope, Public, HideBySig, SpecialName
    get_ControlFont(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlAutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledTextBox: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControl<System::Windows::Forms::TextBox>
    Void .ctor(System.Windows.Forms.Control, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.ScrollBars ScrollBars 'get set' : 
    Boolean WordWrap 'get set' : 
    Boolean Multiline 'get set' : 
    Boolean ReadOnly 'get set' : 
    Int32 MaxLength 'get set' : 
    System.Windows.Forms.BorderStyle BorderStyle 'get set' : 
    System.Windows.Forms.HorizontalAlignment TextAlign 'get set' : 
  Methods:
    get_TextAlign(): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(HorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    get_MaxLength(): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ReadOnly(): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnly(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Multiline(): PrivateScope, Public, HideBySig, SpecialName
    set_Multiline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_WordWrap(): PrivateScope, Public, HideBySig, SpecialName
    set_WordWrap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_ScrollBars(): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollBars(ScrollBars): PrivateScope, Public, HideBySig, SpecialName
    toTextBox(): PrivateScope, Public, HideBySig
Class CVNetControls.ControlSingleList<CVNetControls::TitledTextBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledTextBox): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledTextBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledTextBoxList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlSingleList<CVNetControls::TitledTextBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Windows.Forms.ScrollBars ScrollBars 'set' : 
    Boolean WordWrap 'set' : 
    Boolean Multiline 'set' : 
    Boolean ReadOnly 'set' : 
    Int32 MaxLength 'set' : 
    System.Windows.Forms.BorderStyle BorderStyle 'set' : 
    System.Windows.Forms.HorizontalAlignment TextAlign 'set' : 
    Boolean ControlAutoSize 'set' : 
  Methods:
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(HorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnly(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_Multiline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_WordWrap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollBars(ScrollBars): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    addTextBox(String, String, String): PrivateScope, Public, HideBySig
    insertTextBox(Int32, String, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledTextBox> >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::TitledTextBox>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledTextBox> >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledTextBox): PrivateScope, Public, HideBySig
    insertAt(Int32, TitledTextBox): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    performLayout(): PrivateScope, Public, HideBySig
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledTextBoxTitledList: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.ControlTitledList<CVNetControls::TitledTextBox>
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Windows.Forms.Cursor Cursor 'set' : 
    System.Windows.Forms.ScrollBars ScrollBars 'set' : 
    Boolean WordWrap 'set' : 
    Boolean Multiline 'set' : 
    Boolean ReadOnly 'set' : 
    Int32 MaxLength 'set' : 
    System.Windows.Forms.BorderStyle BorderStyle 'set' : 
    System.Windows.Forms.HorizontalAlignment TextAlign 'set' : 
    Boolean ControlAutoSize 'set' : 
  Methods:
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_TextAlign(HorizontalAlignment): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(BorderStyle): PrivateScope, Public, HideBySig, SpecialName
    set_MaxLength(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_ReadOnly(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_Multiline(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_WordWrap(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    set_ScrollBars(ScrollBars): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    addTextBox(String, String, String): PrivateScope, Public, HideBySig
    insertTextBox(Int32, String, String, String): PrivateScope, Public, HideBySig
Class CVNetControls.DoubleBufferedPanel: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Panel
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CVNetControls.SingleControl<CVNetControls::DoubleBufferedPanel>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    System.Drawing.Color ForeColor 'get set' : 
    System.Drawing.Color BackColor 'get set' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean AutoSize 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Font Font 'get set' : 
    System.String Text 'get set' : 
    System.String Name 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get set' : 
    Int32 Width 'get set' : 
    System.Drawing.Size PreferredSize 'get ' : 
    System.Drawing.Size Size 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Size(Size): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_PreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Width(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Height(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_Text(): PrivateScope, Public, HideBySig, SpecialName
    set_Text(String): PrivateScope, Public, HideBySig, SpecialName
    get_Font(): PrivateScope, Public, HideBySig, SpecialName
    set_Font(Font): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_AutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_AutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_BackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.SingleProgressBar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SingleControl<CVNetControls::DoubleBufferedPanel>
    Void .ctor(System.Windows.Forms.Control, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single ProgressPercentage 'get set' : 
    System.Drawing.Color BorderColorDisabled 'get set' : 
    System.Drawing.Color BorderColor 'get set' : 
    Int32 BorderThickness 'get set' : 
    CVNetControls.RectangularBorder BorderStyle 'get set' : 
  Methods:
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ProgressPercentage(): PrivateScope, Public, HideBySig, SpecialName
    set_ProgressPercentage(Single): PrivateScope, Public, HideBySig, SpecialName
    toPanel(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<CVNetControls::DoubleBufferedPanel>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.TitledControl<CVNetControls::DoubleBufferedPanel>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::DoubleBufferedPanel>
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean ControlAutoSize 'get set' : 
    System.Drawing.Color ControlForeColor 'get set' : 
    System.Drawing.Color ControlBackColor 'get set' : 
    System.Drawing.Font ControlFont 'get set' : 
    System.String ControlText 'get set' : 
    System.Drawing.Size ControlPreferredSize 'get ' : 
    System.String ControlName 'get ' : 
    System.String TitleName 'get ' : 
    System.String Name 'get set' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 ControlHeight 'get set' : 
    Int32 ControlWidth 'get set' : 
    System.Drawing.Size ControlSize 'get set' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlText(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlText(String): PrivateScope, Public, HideBySig, SpecialName
    get_ControlFont(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlAutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVNetControls.TitledProgressBar: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControl<CVNetControls::DoubleBufferedPanel>
    Void .ctor(System.Windows.Forms.Control, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Single ProgressPercentage 'get set' : 
    System.Drawing.Color BorderColorDisabled 'get set' : 
    System.Drawing.Color BorderColor 'get set' : 
    Int32 BorderThickness 'get set' : 
    CVNetControls.RectangularBorder BorderStyle 'get set' : 
  Methods:
    get_BorderStyle(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderStyle(RectangularBorder): PrivateScope, Public, HideBySig, SpecialName
    get_BorderThickness(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderThickness(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColor(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BorderColorDisabled(): PrivateScope, Public, HideBySig, SpecialName
    set_BorderColorDisabled(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ProgressPercentage(): PrivateScope, Public, HideBySig, SpecialName
    set_ProgressPercentage(Single): PrivateScope, Public, HideBySig, SpecialName
    toPanel(): PrivateScope, Public, HideBySig
Struct CVStructures.CVPoint<double>: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    CVStructures.CVPoint<double> Empty IsConst : Public, Static
  Properties:
    Boolean IsEmpty 'get ' : 
    Double Y   'get set' : 
    Double X   'get set' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    op_Subtraction(CVPoint<double>&, CVPoint<double>&): PrivateScope, Public, Static, HideBySig, SpecialName
    offset(Double, Double): PrivateScope, Public, HideBySig
    op_Addition(CVPoint<double>&, CVPoint<double>&): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Equality(CVPoint<double>&, CVPoint<double>&): PrivateScope, Public, Static, HideBySig, SpecialName
Struct CVStructures.CVSize<double>: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    CVStructures.CVSize<double> Empty IsConst : Public, Static
  Properties:
    Boolean IsEmpty 'get ' : 
    Double Height 'get set' : 
    Double Width 'get set' : 
  Methods:
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
Struct CVStructures.CVRectangle<double>: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    CVStructures.CVRectangle<double> Empty IsConst : Public, Static
  Properties:
    Boolean IsEmpty 'get ' : 
    CVStructures.CVSize<double> Size 'get set' : 
    CVStructures.CVPoint<double> Location 'get set' : 
    Double Height 'get set' : 
    Double Width 'get set' : 
    Double CentreY 'get set' : 
    Double Bottom 'get set' : 
    Double Top 'get set' : 
    Double CentreX 'get set' : 
    Double Right 'get set' : 
    Double Left 'get set' : 
  Methods:
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, HideBySig, SpecialName
    set_CentreX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    set_Bottom(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, HideBySig, SpecialName
    set_CentreY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(CVSize<double>): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Final, Virtual, HideBySig
    FromLTRB(Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig
Class ComputationalGeometryLF.GeometricObject: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double BoundingHeight 'get ' : 
    Double BoundingWidth 'get ' : 
    Double BoundingCentreY 'get ' : 
    Double BoundingBottom 'get ' : 
    Double BoundingTop 'get ' : 
    Double BoundingCentreX 'get ' : 
    Double BoundingRight 'get ' : 
    Double BoundingLeft 'get ' : 
    CVStructures.CVPoint<double> BoundingLocation 'get ' : 
    CVStructures.CVRectangle<double> BoundingBox 'get ' : 
    System.Drawing.Color MainColor 'get set' : 
    Boolean IsDrawn 'get set' : 
    DrawStyle DrawStyleHint 'get set' : 
  Methods:
    get_DrawStyleHint(): PrivateScope, Public, HideBySig, SpecialName
    set_DrawStyleHint(DrawStyle): PrivateScope, Public, HideBySig, SpecialName
    get_IsDrawn(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDrawn(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_MainColor(): PrivateScope, Public, HideBySig, SpecialName
    set_MainColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingBox(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingRight(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingTop(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_BoundingHeight(): PrivateScope, Public, HideBySig, SpecialName
    draw(Graphics, Pen, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    fill(Graphics, SolidBrush, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    isPoint(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    isSegment(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    isRectangle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    isEllipse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    isPolygon(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    isInView(CVRectangle<double>&): PrivateScope, Public, HideBySig
    interpretAs<ComputationalGeometryLF::GeometricPoint>(): PrivateScope, Public, HideBySig
    interpretAs<ComputationalGeometryLF::GeometricSegment>(): PrivateScope, Public, HideBySig
    interpretAs<ComputationalGeometryLF::GeometricRectangle>(): PrivateScope, Public, HideBySig
    interpretAs<ComputationalGeometryLF::GeometricPolygon>(): PrivateScope, Public, HideBySig
Struct ComputationalGeometryLF.GeometricObject+DrawStyle: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    DrawStyle Draw = 1 : Public, Static, Literal, HasDefault
    DrawStyle Fill = 2 : Public, Static, Literal, HasDefault
    DrawStyle DrawAndFill = 3 : Public, Static, Literal, HasDefault
Class ComputationalGeometryLF.GeometricPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :ComputationalGeometryLF.GeometricObject
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CVStructures.CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ComputationalGeometryLF.GeometricPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IComparable
  Properties:
    CVStructures.CVPoint<double> Location 'get set' : 
    Double Y   'get set' : 
    Double X   'get set' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName
    set(Double, Double): PrivateScope, Public, HideBySig
    set(CVPoint<double>): PrivateScope, Public, HideBySig
    set(GeometricPoint): PrivateScope, Public, HideBySig
    offset(Double, Double): PrivateScope, Public, HideBySig
    offset(CVPoint<double>): PrivateScope, Public, HideBySig
    offset(GeometricPoint): PrivateScope, Public, HideBySig
    getDeltaXTo(GeometricPoint): PrivateScope, Public, HideBySig
    getDeltaYTo(GeometricPoint): PrivateScope, Public, HideBySig
    getDeltaTo(GeometricPoint): PrivateScope, Public, HideBySig
    getDistanceSquaredTo(GeometricPoint): PrivateScope, Public, HideBySig
    getDistanceTo(GeometricPoint): PrivateScope, Public, HideBySig
    isPoint(): PrivateScope, Public, Virtual, HideBySig
    draw(Graphics, Pen, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig
    fill(Graphics, SolidBrush, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    CompareTo(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    op_GreaterThan(GeometricPoint, GeometricPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(GeometricPoint, GeometricPoint): PrivateScope, Public, Static, HideBySig, SpecialName
Class ComputationalGeometryLF.GeometricPoint+ComparerX: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[ComputationalGeometryLF.GeometricPoint]
  Methods:
    Compare(GeometricPoint, GeometricPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ComputationalGeometryLF.GeometricPoint+ComparerY: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[ComputationalGeometryLF.GeometricPoint]
  Methods:
    Compare(GeometricPoint, GeometricPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ComputationalGeometryLF.GeometricPoint+ComparerAngle: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.GeometricPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[ComputationalGeometryLF.GeometricPoint]
  Fields:
    ComputationalGeometryLF.GeometricPoint Origin : Public
  Methods:
    Compare(GeometricPoint, GeometricPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ComputationalGeometryLF.GeometricPoint+ComparerDistance: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.GeometricPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[ComputationalGeometryLF.GeometricPoint]
  Fields:
    ComputationalGeometryLF.GeometricPoint Origin : Public
  Methods:
    Compare(GeometricPoint, GeometricPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ComputationalGeometryLF.GeometricPoint+ComparerAngleCoords: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.GeometricPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IComparer`1[ComputationalGeometryLF.GeometricPoint]
  Fields:
    ComputationalGeometryLF.GeometricPoint Origin : Public
  Methods:
    Compare(GeometricPoint, GeometricPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ComputationalGeometryLF.GeometricSegment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :ComputationalGeometryLF.GeometricObject
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CVStructures.CVPoint<double>, CVStructures.CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double DeltaY 'get ' : 
    Double DeltaX 'get ' : 
    CVStructures.CVPoint<double> Delta 'get ' : 
    Double Length 'get ' : 
    Double LengthSquared 'get ' : 
    CVStructures.CVPoint<double> Lower 'get ' : 
    Double LowerY 'get ' : 
    Double LowerX 'get ' : 
    CVStructures.CVPoint<double> Upper 'get ' : 
    Double UpperY 'get ' : 
    Double UpperX 'get ' : 
    Double EndY 'get set' : 
    Double EndX 'get set' : 
    CVStructures.CVPoint<double> End 'get set' : 
    Double StartY 'get set' : 
    Double StartX 'get set' : 
    CVStructures.CVPoint<double> Start 'get set' : 
  Methods:
    get_Start(): PrivateScope, Public, HideBySig, SpecialName
    set_Start(CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName
    get_StartX(): PrivateScope, Public, HideBySig, SpecialName
    set_StartX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_StartY(): PrivateScope, Public, HideBySig, SpecialName
    set_StartY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_End(): PrivateScope, Public, HideBySig, SpecialName
    set_End(CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName
    get_EndX(): PrivateScope, Public, HideBySig, SpecialName
    set_EndX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_EndY(): PrivateScope, Public, HideBySig, SpecialName
    set_EndY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_UpperX(): PrivateScope, Public, HideBySig, SpecialName
    get_UpperY(): PrivateScope, Public, HideBySig, SpecialName
    get_Upper(): PrivateScope, Public, HideBySig, SpecialName
    get_LowerX(): PrivateScope, Public, HideBySig, SpecialName
    get_LowerY(): PrivateScope, Public, HideBySig, SpecialName
    get_Lower(): PrivateScope, Public, HideBySig, SpecialName
    get_LengthSquared(): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Delta(): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaX(): PrivateScope, Public, HideBySig, SpecialName
    get_DeltaY(): PrivateScope, Public, HideBySig, SpecialName
    set(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    set(CVPoint<double>, CVPoint<double>): PrivateScope, Public, HideBySig
    offset(Double, Double): PrivateScope, Public, HideBySig
    offset(CVPoint<double>): PrivateScope, Public, HideBySig
    offset(GeometricPoint): PrivateScope, Public, HideBySig
    isSegment(): PrivateScope, Public, Virtual, HideBySig
    draw(Graphics, Pen, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig
    fill(Graphics, SolidBrush, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class ComputationalGeometryLF.GeometricRectangle: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :ComputationalGeometryLF.GeometricObject
    Void .ctor(CVStructures.CVPoint<double>, CVStructures.CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CVStructures.CVPoint<double>, CVStructures.CVSize<double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Height 'get set' : 
    Double Width 'get set' : 
    CVStructures.CVSize<double> Size 'get set' : 
    Double CentreY 'get set' : 
    Double Bottom 'get set' : 
    Double Top 'get set' : 
    Double CentreX 'get set' : 
    Double Right 'get set' : 
    Double Left 'get set' : 
    CVStructures.CVPoint<double> Origin 'get set' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, HideBySig, SpecialName
    set_CentreX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    set_Bottom(Double): PrivateScope, Public, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, HideBySig, SpecialName
    set_CentreY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(CVSize<double>): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    set(CVPoint<double>, CVPoint<double>): PrivateScope, Public, HideBySig
    set(Double, Double, Double, Double): PrivateScope, Public, HideBySig
    set(CVPoint<double>, CVSize<double>): PrivateScope, Public, HideBySig
    offset(Double, Double): PrivateScope, Public, HideBySig
    offset(CVPoint<double>): PrivateScope, Public, HideBySig
    offset(GeometricPoint): PrivateScope, Public, HideBySig
    isRectangle(): PrivateScope, Public, Virtual, HideBySig
    draw(Graphics, Pen, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig
    fill(Graphics, SolidBrush, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class ComputationalGeometryLF.GeometricEllipse: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :ComputationalGeometryLF.GeometricObject
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CVStructures.CVPoint<double>, CVStructures.CVSize<double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Height 'get set' : 
    Double Width 'get set' : 
    CVStructures.CVSize<double> Size 'get set' : 
    Double Y   'get set' : 
    Double Bottom 'get set' : 
    Double Top 'get set' : 
    Double X   'get set' : 
    Double Right 'get set' : 
    Double Left 'get set' : 
    CVStructures.CVPoint<double> Origin 'get set' : 
  Methods:
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Double): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    set_Bottom(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(CVSize<double>): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    set_Width(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    set_Height(Double): PrivateScope, Public, HideBySig, SpecialName
    isEllipse(): PrivateScope, Public, Virtual, HideBySig
    draw(Graphics, Pen, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig
    fill(Graphics, SolidBrush, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class ComputationalGeometryLF.GeometricPolygon: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :ComputationalGeometryLF.GeometricObject
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(CVStructures.CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ComputationalGeometryLF.GeometricPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 PointCount 'get ' : 
  Methods:
    get_PointCount(): PrivateScope, Public, HideBySig, SpecialName
    reset(Double, Double): PrivateScope, Public, HideBySig
    reset(CVPoint<double>): PrivateScope, Public, HideBySig
    reset(GeometricPoint): PrivateScope, Public, HideBySig
    offset(Double, Double): PrivateScope, Public, HideBySig
    offset(CVPoint<double>): PrivateScope, Public, HideBySig
    offset(GeometricPoint): PrivateScope, Public, HideBySig
    addPoint(Double, Double): PrivateScope, Public, HideBySig
    addPoint(CVPoint<double>): PrivateScope, Public, HideBySig
    addPoint(GeometricPoint): PrivateScope, Public, HideBySig
    getPointAt(Int32): PrivateScope, Public, HideBySig
    modPointAt(Int32, Double, Double): PrivateScope, Public, HideBySig
    isPolygon(): PrivateScope, Public, Virtual, HideBySig
    draw(Graphics, Pen, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig
    fill(Graphics, SolidBrush, CVPoint<double>&): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class ComputationalGeometryLF.CartesianPlane: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point LastMouseLocation 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Right 'get set' : 
    Int32 Top  'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 FullHeight 'get ' : 
    Int32 FullWidth 'get ' : 
    System.Drawing.Size FullSize 'get ' : 
    Int32 BoxHeight 'get set' : 
    Int32 BoxWidth 'get set' : 
    System.Drawing.Size BoxSize 'get set' : 
    CVStructures.CVRectangle<double> ViewRectangle 'get ' : 
    Byte LabelBoxGirth 'get set' : 
    Int32 LargeGridSpacing 'get set' : 
    Int32 SmallGridSpacingInPixels 'get set' : 
    Double OriginY 'get set' : 
    Double OriginX 'get set' : 
    CVStructures.CVPoint<double> Origin 'get set' : 
    Byte LabelBoxSpacing 'get set' : 
    System.String LabelFontName 'get set' : 
    System.Drawing.Color LabelTextColor 'get set' : 
    System.Drawing.Color OriginGridColor 'get set' : 
    System.Drawing.Color LargeGridColor 'get set' : 
    System.Drawing.Color SmallGridColor 'get set' : 
    System.Drawing.Color LabelBackgroundColor 'get set' : 
    System.Drawing.Color PlaneBackgroundColor 'get set' : 
    Boolean DrawGrid 'get set' : 
    Boolean LabelsVisible 'get set' : 
  Methods:
    get_LabelsVisible(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelsVisible(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_DrawGrid(): PrivateScope, Public, HideBySig, SpecialName
    set_DrawGrid(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_PlaneBackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_PlaneBackgroundColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_LabelBackgroundColor(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelBackgroundColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_SmallGridColor(): PrivateScope, Public, HideBySig, SpecialName
    set_SmallGridColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_LargeGridColor(): PrivateScope, Public, HideBySig, SpecialName
    set_LargeGridColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_OriginGridColor(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginGridColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_LabelTextColor(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelTextColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_LabelFontName(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelFontName(String): PrivateScope, Public, HideBySig, SpecialName
    get_LabelBoxSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelBoxSpacing(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_Origin(): PrivateScope, Public, HideBySig, SpecialName
    set_Origin(CVPoint<double>): PrivateScope, Public, HideBySig, SpecialName
    get_OriginX(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginX(Double): PrivateScope, Public, HideBySig, SpecialName
    get_OriginY(): PrivateScope, Public, HideBySig, SpecialName
    set_OriginY(Double): PrivateScope, Public, HideBySig, SpecialName
    get_SmallGridSpacingInPixels(): PrivateScope, Public, HideBySig, SpecialName
    set_SmallGridSpacingInPixels(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LargeGridSpacing(): PrivateScope, Public, HideBySig, SpecialName
    set_LargeGridSpacing(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_LabelBoxGirth(): PrivateScope, Public, HideBySig, SpecialName
    set_LabelBoxGirth(Byte): PrivateScope, Public, HideBySig, SpecialName
    get_ViewRectangle(): PrivateScope, Public, HideBySig, SpecialName
    get_BoxSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BoxSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_BoxWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_BoxWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_BoxHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_BoxHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FullSize(): PrivateScope, Public, HideBySig, SpecialName
    get_FullWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_FullHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, HideBySig, SpecialName
    get_LastMouseLocation(): PrivateScope, Public, HideBySig, SpecialName
    addMouseMoveEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    addMouseDownEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    addMouseUpEvent(MouseEventHandler): PrivateScope, Public, HideBySig
    startDraw(): PrivateScope, Public, HideBySig
    endDraw(): PrivateScope, Public, HideBySig
    drawObject(GeometricObject): PrivateScope, Public, HideBySig
    drawObjects(List`1): PrivateScope, Public, HideBySig
    drawObjects(GeometricObject[]): PrivateScope, Public, HideBySig
Class CVNetControls.NumericLimiter<unsigned char>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    max(Byte, Byte): PrivateScope, Public, Static, HideBySig
    minMax(Byte, Byte, Byte): PrivateScope, Public, Static, HideBySig
Class CVNetControls.NumericLimiter<double>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    minMax(Double, Double, Double): PrivateScope, Public, Static, HideBySig
Class CVNetControls.NumericLimiter<int>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    minMax(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
Class ComputationalGeometryLF.ModObjectFormRefresher: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class ComputationalGeometryLF.Toolbox: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    init(CartesianPlane, List`1, TitledTextBox, LabelButton, TitledLabel, ModObjectFormRefresher): PrivateScope, Public, Static, HideBySig
    linkPlane(CartesianPlane, List`1): PrivateScope, Public, Static, HideBySig
    redrawPlane(): PrivateScope, Public, Static, HideBySig
    setAutoRefreshInfoBox(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    getAutoRefreshInfoBox(): PrivateScope, Public, Static, HideBySig
    setGridDrawing(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    setPlaneLabelDrawing(Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    refreshInfoBox(): PrivateScope, Public, Static, HideBySig
    setBackgroundColor(Color): PrivateScope, Public, Static, HideBySig
    setSmallGridColor(Color): PrivateScope, Public, Static, HideBySig
    setLargeGridColor(Color): PrivateScope, Public, Static, HideBySig
    setOriginGridColor(Color): PrivateScope, Public, Static, HideBySig
    setSmallGridSpacing(Int32): PrivateScope, Public, Static, HideBySig
    setLargeGridSpacing(Int32): PrivateScope, Public, Static, HideBySig
    moveObjectTo(Int32, Int32): PrivateScope, Public, Static, HideBySig
    setObject(Int32, GeometricObject): PrivateScope, Public, Static, HideBySig
    addObject(GeometricObject): PrivateScope, Public, Static, HideBySig
    addObjects(List`1): PrivateScope, Public, Static, HideBySig
    removeObject(Int32): PrivateScope, Public, Static, HideBySig
    removePoints(): PrivateScope, Public, Static, HideBySig
    removeSegments(): PrivateScope, Public, Static, HideBySig
    removeRectangles(): PrivateScope, Public, Static, HideBySig
    removeAll(): PrivateScope, Public, Static, HideBySig
    selectObject(Int32): PrivateScope, Public, Static, HideBySig
    getObject(Int32): PrivateScope, Public, Static, HideBySig
    getObjectCount(): PrivateScope, Public, Static, HideBySig
    getSelectedObjectIndex(): PrivateScope, Public, Static, HideBySig
Class ComputationalGeometryLF.BasicAlgorithms: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    orientationTest(GeometricSegment, GeometricSegment): PrivateScope, Public, Static, HideBySig
    orientationTest(GeometricPoint, GeometricSegment): PrivateScope, Public, Static, HideBySig
    orientationTest(GeometricPoint, GeometricPoint, GeometricPoint): PrivateScope, Public, Static, HideBySig
    orientationTest(Double, Double, GeometricSegment): PrivateScope, Public, Static, HideBySig
    orientationTest(Double, Double, Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig
    containmentTest(GeometricObject, GeometricObject): PrivateScope, Public, Static, HideBySig
    pointContainmentTest(GeometricPoint, GeometricObject): PrivateScope, Public, Static, HideBySig
    pointContainmentTest(Double, Double, GeometricObject): PrivateScope, Public, Static, HideBySig
    belongingnessTest(GeometricSegment, GeometricSegment): PrivateScope, Public, Static, HideBySig
    belongingnessTest(GeometricPoint, GeometricSegment): PrivateScope, Public, Static, HideBySig
    belongingnessTest(Double, Double, GeometricSegment): PrivateScope, Public, Static, HideBySig
    boundingBoxIntersectionTest(GeometricObject, GeometricObject): PrivateScope, Public, Static, HideBySig
    intersectionTest(GeometricSegment, GeometricSegment): PrivateScope, Public, Static, HideBySig
    getIntersectionPoint(GeometricSegment, GeometricSegment): PrivateScope, Public, Static, HideBySig
    getPointsWithinBounds(GeometricRectangle, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    getBottomMostIndex(List`1): PrivateScope, Public, Static, HideBySig
    getTopMostIndex(List`1): PrivateScope, Public, Static, HideBySig
    getRightMostIndex(List`1): PrivateScope, Public, Static, HideBySig
    getLeftMostIndex(List`1): PrivateScope, Public, Static, HideBySig
    getSegmentsWithinBounds(GeometricRectangle, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    getPolygonSegments(GeometricPolygon): PrivateScope, Public, Static, HideBySig
    getPolygonPoints(GeometricPolygon): PrivateScope, Public, Static, HideBySig
    interpretPointOrientationTest(Double): PrivateScope, Public, Static, HideBySig
    interpretSegmentOrientationTest(Tuple`2): PrivateScope, Public, Static, HideBySig
Class ComputationalGeometryLF.ClosestPairOfPoints: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    findByTree(GeometricRectangle, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    findByMerge(GeometricRectangle, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class CVStructures.BSTree<ComputationalGeometryLF::GeometricPoint ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    ComputationalGeometryLF.GeometricPoint[] LevelOrderRightToLeft 'get ' : 
    ComputationalGeometryLF.GeometricPoint[] LevelOrderLeftToRight 'get ' : 
    ComputationalGeometryLF.GeometricPoint[] PostOrderInverse 'get ' : 
    ComputationalGeometryLF.GeometricPoint[] InOrderInverse 'get ' : 
    ComputationalGeometryLF.GeometricPoint[] PreOrderInverse 'get ' : 
    ComputationalGeometryLF.GeometricPoint[] PostOrder 'get ' : 
    ComputationalGeometryLF.GeometricPoint[] InOrder 'get ' : 
    ComputationalGeometryLF.GeometricPoint[] PreOrder 'get ' : 
    Int32 Height 'get ' : 
    ComputationalGeometryLF.GeometricPoint Max 'get ' : 
    ComputationalGeometryLF.GeometricPoint Min 'get ' : 
    ComputationalGeometryLF.GeometricPoint Root 'get ' : 
    Boolean IsEmpty 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    get_Min(): PrivateScope, Public, HideBySig, SpecialName
    get_Max(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_PreOrder(): PrivateScope, Public, HideBySig, SpecialName
    get_InOrder(): PrivateScope, Public, HideBySig, SpecialName
    get_PostOrder(): PrivateScope, Public, HideBySig, SpecialName
    get_PreOrderInverse(): PrivateScope, Public, HideBySig, SpecialName
    get_InOrderInverse(): PrivateScope, Public, HideBySig, SpecialName
    get_PostOrderInverse(): PrivateScope, Public, HideBySig, SpecialName
    get_LevelOrderLeftToRight(): PrivateScope, Public, HideBySig, SpecialName
    get_LevelOrderRightToLeft(): PrivateScope, Public, HideBySig, SpecialName
    insert(GeometricPoint): PrivateScope, Public, HideBySig
    remove(GeometricPoint): PrivateScope, Public, HideBySig
    getRange(GeometricPoint, Int32, Int32): PrivateScope, Public, HideBySig
Class CVStructures.TreeNode<ComputationalGeometryLF::GeometricPoint ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.GeometricPoint, CVStructures.TreeNode<ComputationalGeometryLF::GeometricPoint ^>, CVStructures.TreeNode<ComputationalGeometryLF::GeometricPoint ^>, CVStructures.TreeNode<ComputationalGeometryLF::GeometricPoint ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ComputationalGeometryLF.GeometricPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    ComputationalGeometryLF.GeometricPoint Item : Public
    CVStructures.TreeNode<ComputationalGeometryLF::GeometricPoint ^> Left : Public
    CVStructures.TreeNode<ComputationalGeometryLF::GeometricPoint ^> Right : Public
    CVStructures.TreeNode<ComputationalGeometryLF::GeometricPoint ^> Parent : Public
  Properties:
    Boolean HasParent 'get ' : 
    Boolean HasRightChild 'get ' : 
    Boolean HasLeftChild 'get ' : 
  Methods:
    get_HasLeftChild(): PrivateScope, Public, HideBySig, SpecialName
    get_HasRightChild(): PrivateScope, Public, HideBySig, SpecialName
    get_HasParent(): PrivateScope, Public, HideBySig, SpecialName
    goLeft(TreeNode<ComputationalGeometryLF::GeometricPoint ^>&): PrivateScope, Public, Static, HideBySig
    goRight(TreeNode<ComputationalGeometryLF::GeometricPoint ^>&): PrivateScope, Public, Static, HideBySig
    goUp(TreeNode<ComputationalGeometryLF::GeometricPoint ^>&): PrivateScope, Public, Static, HideBySig
    setLeftChild(GeometricPoint): PrivateScope, Public, HideBySig
    setRightChild(GeometricPoint): PrivateScope, Public, HideBySig
Class ComputationalGeometryLF.ConvexHull: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    grahamScan(GeometricRectangle, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    jarvisMarch(GeometricRectangle, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    quickHull(GeometricRectangle, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class CVStructures.CVStack<ComputationalGeometryLF::GeometricPoint ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    push(GeometricPoint): PrivateScope, Public, HideBySig
    top(): PrivateScope, Public, HideBySig
    pop(): PrivateScope, Public, HideBySig
    at(Int32): PrivateScope, Public, HideBySig
Class CVStructures.StackNode<ComputationalGeometryLF::GeometricPoint ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.GeometricPoint, CVStructures.StackNode<ComputationalGeometryLF::GeometricPoint ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    ComputationalGeometryLF.GeometricPoint Item : Public
    CVStructures.StackNode<ComputationalGeometryLF::GeometricPoint ^> Next : Public
  Properties:
    Boolean IsLast 'get ' : 
  Methods:
    get_IsLast(): PrivateScope, Public, HideBySig, SpecialName
    goNext(StackNode<ComputationalGeometryLF::GeometricPoint ^>&): PrivateScope, Public, Static, HideBySig
Struct CVStructures.KeyedPair<unsigned char\,unsigned short>: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte key : Public
    UInt16 item : Public
  Methods:
    set(Byte, UInt16): PrivateScope, Public, HideBySig
Class CVFileIO.CVAwfulCipher: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    UInt32 minBlockLength IsConst : Public, Static, HasDefault
    UInt32 maxBlockLength IsConst : Public, Static, HasDefault
  Methods:
    setKey(Byte[]): PrivateScope, Public, HideBySig
    getKey(): PrivateScope, Public, HideBySig
    getBlockLength(): PrivateScope, Public, HideBySig
    adjustBeforeEncryption(Byte[]&): PrivateScope, Public, HideBySig
    adjustAfterDecryption(Byte[]&): PrivateScope, Public, HideBySig
    encrypt(Byte[]): PrivateScope, Public, HideBySig
    decrypt(Byte[]): PrivateScope, Public, HideBySig
Class CVFileIO.HuffmanCompression: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    compress(Byte[]): PrivateScope, Public, Static, HideBySig
    decompress(Byte[]): PrivateScope, Public, Static, HideBySig
    getEntropy(Byte[]): PrivateScope, Public, Static, HideBySig
    getAverageCodeLength(Byte[]): PrivateScope, Public, Static, HideBySig
    getCodeEfficiency(Byte[]): PrivateScope, Public, Static, HideBySig
Struct CVFileIO.HuffmanCompression+TreeItem: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int16, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int16): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 iParent : Public
    Int32 iLeft : Public
    Int32 iRight : Public
    Int16 byte : Public
    Boolean visited : Public
    TreeItem EMPTY IsConst : Public, Static
Struct CVFileIO.HuffmanCompression+TreeRoot: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 index : Public
    Int32 weight : Public
    TreeRoot EMPTY IsConst : Public, Static
  Methods:
    op_GreaterThan(TreeRoot, TreeRoot): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(TreeRoot, TreeRoot): PrivateScope, Public, Static, HideBySig, SpecialName
Class CVFileIO.FileManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    setEncryptKey(Byte[]): PrivateScope, Public, HideBySig
    setEncryptKey(String, Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    getEncryptKey(): PrivateScope, Public, HideBySig
    setCompressState(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    getCompressState(): PrivateScope, Public, HideBySig
    eligibleForEncryption(): PrivateScope, Public, HideBySig
    setEncryptionState(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig
    getEncryptionState(): PrivateScope, Public, HideBySig
    setSignature(Byte[]): PrivateScope, Public, HideBySig
    setSignature(String): PrivateScope, Public, HideBySig
    getSignature(): PrivateScope, Public, HideBySig
    getSignatureLength(): PrivateScope, Public, HideBySig
    getEncryptKeyLength(): PrivateScope, Public, HideBySig
    save(String, Byte[]): PrivateScope, Public, HideBySig
    load(String, Byte[]&): PrivateScope, Public, HideBySig
Class CVStructures.CVHeap<CVFileIO::HuffmanCompression::TreeRoot>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInMaxMode 'get ' : 
    Boolean IsInMinMode 'get ' : 
    Boolean IsEmpty 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInMinMode(): PrivateScope, Public, HideBySig, SpecialName
    get_IsInMaxMode(): PrivateScope, Public, HideBySig, SpecialName
    insert(TreeRoot): PrivateScope, Public, HideBySig
    extract(): PrivateScope, Public, HideBySig
Class ComputationalGeometryLF.FarthestPairOfPoints: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    find(GeometricRectangle, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
Class ComputationalGeometryLF.NodeSegment: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.GeometricSegment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    ComputationalGeometryLF.GeometricSegment Segment : Public
    Double CompareError IsConst : Public, Static
  Methods:
    SetSweepLine(CVPoint<double>): PrivateScope, Public, Static, HideBySig
    op_GreaterThan(NodeSegment, NodeSegment): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(NodeSegment, NodeSegment): PrivateScope, Public, Static, HideBySig, SpecialName
Class ComputationalGeometryLF.EventPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Interfaces:
    System.IComparable`1[ComputationalGeometryLF.EventPoint]
  Fields:
    System.Collections.Generic.List`1[ComputationalGeometryLF.NodeSegment] AsUpper : Public
    System.Collections.Generic.List`1[ComputationalGeometryLF.NodeSegment] AsLower : Public
    System.Collections.Generic.List`1[ComputationalGeometryLF.NodeSegment] AsIntersect : Public
  Properties:
    Int32 SegmentCount 'get ' : 
    CVStructures.CVPoint<double> Point 'get ' : 
  Methods:
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    get_SegmentCount(): PrivateScope, Public, HideBySig, SpecialName
    CreateAsUpper(NodeSegment): PrivateScope, Public, Static, HideBySig
    CreateAsLower(NodeSegment): PrivateScope, Public, Static, HideBySig
    CreateAsIntersect(CVPoint<double>, NodeSegment, NodeSegment): PrivateScope, Public, Static, HideBySig
    mergeWith(EventPoint): PrivateScope, Public, HideBySig
    op_GreaterThan(EventPoint, EventPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(EventPoint, EventPoint): PrivateScope, Public, Static, HideBySig, SpecialName
    CompareTo(EventPoint): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class ComputationalGeometryLF.Intersection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.EventPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    CVStructures.CVPoint<double> Point : Public
    System.Collections.Generic.List`1[ComputationalGeometryLF.GeometricSegment] Segments : Public
  Methods:
    op_GreaterThan(Intersection, Intersection): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(Intersection, Intersection): PrivateScope, Public, Static, HideBySig, SpecialName
Class ComputationalGeometryLF.IntersectionPoints: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    solve(GeometricRectangle, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig
    isPolygonSimple(GeometricPolygon): PrivateScope, Public, Static, HideBySig
Class CVStructures.BSTree<ComputationalGeometryLF::NodeSegment ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    ComputationalGeometryLF.NodeSegment[] LevelOrderRightToLeft 'get ' : 
    ComputationalGeometryLF.NodeSegment[] LevelOrderLeftToRight 'get ' : 
    ComputationalGeometryLF.NodeSegment[] PostOrderInverse 'get ' : 
    ComputationalGeometryLF.NodeSegment[] InOrderInverse 'get ' : 
    ComputationalGeometryLF.NodeSegment[] PreOrderInverse 'get ' : 
    ComputationalGeometryLF.NodeSegment[] PostOrder 'get ' : 
    ComputationalGeometryLF.NodeSegment[] InOrder 'get ' : 
    ComputationalGeometryLF.NodeSegment[] PreOrder 'get ' : 
    Int32 Height 'get ' : 
    ComputationalGeometryLF.NodeSegment Max 'get ' : 
    ComputationalGeometryLF.NodeSegment Min 'get ' : 
    ComputationalGeometryLF.NodeSegment Root 'get ' : 
    Boolean IsEmpty 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    get_Min(): PrivateScope, Public, HideBySig, SpecialName
    get_Max(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_PreOrder(): PrivateScope, Public, HideBySig, SpecialName
    get_InOrder(): PrivateScope, Public, HideBySig, SpecialName
    get_PostOrder(): PrivateScope, Public, HideBySig, SpecialName
    get_PreOrderInverse(): PrivateScope, Public, HideBySig, SpecialName
    get_InOrderInverse(): PrivateScope, Public, HideBySig, SpecialName
    get_PostOrderInverse(): PrivateScope, Public, HideBySig, SpecialName
    get_LevelOrderLeftToRight(): PrivateScope, Public, HideBySig, SpecialName
    get_LevelOrderRightToLeft(): PrivateScope, Public, HideBySig, SpecialName
    insert(NodeSegment): PrivateScope, Public, HideBySig
    remove(NodeSegment): PrivateScope, Public, HideBySig
    getRange(NodeSegment, Int32, Int32): PrivateScope, Public, HideBySig
Class CVStructures.BSTree<ComputationalGeometryLF::EventPoint ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    ComputationalGeometryLF.EventPoint[] LevelOrderRightToLeft 'get ' : 
    ComputationalGeometryLF.EventPoint[] LevelOrderLeftToRight 'get ' : 
    ComputationalGeometryLF.EventPoint[] PostOrderInverse 'get ' : 
    ComputationalGeometryLF.EventPoint[] InOrderInverse 'get ' : 
    ComputationalGeometryLF.EventPoint[] PreOrderInverse 'get ' : 
    ComputationalGeometryLF.EventPoint[] PostOrder 'get ' : 
    ComputationalGeometryLF.EventPoint[] InOrder 'get ' : 
    ComputationalGeometryLF.EventPoint[] PreOrder 'get ' : 
    Int32 Height 'get ' : 
    ComputationalGeometryLF.EventPoint Max 'get ' : 
    ComputationalGeometryLF.EventPoint Min 'get ' : 
    ComputationalGeometryLF.EventPoint Root 'get ' : 
    Boolean IsEmpty 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    get_Root(): PrivateScope, Public, HideBySig, SpecialName
    get_Min(): PrivateScope, Public, HideBySig, SpecialName
    get_Max(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_PreOrder(): PrivateScope, Public, HideBySig, SpecialName
    get_InOrder(): PrivateScope, Public, HideBySig, SpecialName
    get_PostOrder(): PrivateScope, Public, HideBySig, SpecialName
    get_PreOrderInverse(): PrivateScope, Public, HideBySig, SpecialName
    get_InOrderInverse(): PrivateScope, Public, HideBySig, SpecialName
    get_PostOrderInverse(): PrivateScope, Public, HideBySig, SpecialName
    get_LevelOrderLeftToRight(): PrivateScope, Public, HideBySig, SpecialName
    get_LevelOrderRightToLeft(): PrivateScope, Public, HideBySig, SpecialName
    insert(EventPoint): PrivateScope, Public, HideBySig
    remove(EventPoint): PrivateScope, Public, HideBySig
    exists(EventPoint): PrivateScope, Public, HideBySig
    get(EventPoint): PrivateScope, Public, HideBySig
Class CVStructures.TreeNode<ComputationalGeometryLF::NodeSegment ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.NodeSegment, CVStructures.TreeNode<ComputationalGeometryLF::NodeSegment ^>, CVStructures.TreeNode<ComputationalGeometryLF::NodeSegment ^>, CVStructures.TreeNode<ComputationalGeometryLF::NodeSegment ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ComputationalGeometryLF.NodeSegment): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    ComputationalGeometryLF.NodeSegment Item : Public
    CVStructures.TreeNode<ComputationalGeometryLF::NodeSegment ^> Left : Public
    CVStructures.TreeNode<ComputationalGeometryLF::NodeSegment ^> Right : Public
    CVStructures.TreeNode<ComputationalGeometryLF::NodeSegment ^> Parent : Public
  Properties:
    Boolean HasParent 'get ' : 
    Boolean HasRightChild 'get ' : 
    Boolean HasLeftChild 'get ' : 
  Methods:
    get_HasLeftChild(): PrivateScope, Public, HideBySig, SpecialName
    get_HasRightChild(): PrivateScope, Public, HideBySig, SpecialName
    get_HasParent(): PrivateScope, Public, HideBySig, SpecialName
    goLeft(TreeNode<ComputationalGeometryLF::NodeSegment ^>&): PrivateScope, Public, Static, HideBySig
    goRight(TreeNode<ComputationalGeometryLF::NodeSegment ^>&): PrivateScope, Public, Static, HideBySig
    goUp(TreeNode<ComputationalGeometryLF::NodeSegment ^>&): PrivateScope, Public, Static, HideBySig
    setLeftChild(NodeSegment): PrivateScope, Public, HideBySig
    setRightChild(NodeSegment): PrivateScope, Public, HideBySig
Class CVStructures.TreeNode<ComputationalGeometryLF::EventPoint ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.EventPoint, CVStructures.TreeNode<ComputationalGeometryLF::EventPoint ^>, CVStructures.TreeNode<ComputationalGeometryLF::EventPoint ^>, CVStructures.TreeNode<ComputationalGeometryLF::EventPoint ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(ComputationalGeometryLF.EventPoint): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    ComputationalGeometryLF.EventPoint Item : Public
    CVStructures.TreeNode<ComputationalGeometryLF::EventPoint ^> Left : Public
    CVStructures.TreeNode<ComputationalGeometryLF::EventPoint ^> Right : Public
    CVStructures.TreeNode<ComputationalGeometryLF::EventPoint ^> Parent : Public
  Properties:
    Boolean HasParent 'get ' : 
    Boolean HasRightChild 'get ' : 
    Boolean HasLeftChild 'get ' : 
  Methods:
    get_HasLeftChild(): PrivateScope, Public, HideBySig, SpecialName
    get_HasRightChild(): PrivateScope, Public, HideBySig, SpecialName
    get_HasParent(): PrivateScope, Public, HideBySig, SpecialName
    goLeft(TreeNode<ComputationalGeometryLF::EventPoint ^>&): PrivateScope, Public, Static, HideBySig
    goRight(TreeNode<ComputationalGeometryLF::EventPoint ^>&): PrivateScope, Public, Static, HideBySig
    goUp(TreeNode<ComputationalGeometryLF::EventPoint ^>&): PrivateScope, Public, Static, HideBySig
    setLeftChild(EventPoint): PrivateScope, Public, HideBySig
    setRightChild(EventPoint): PrivateScope, Public, HideBySig
Class ComputationalGeometryLF.TriangulationRegion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Collections.Generic.List`1[ComputationalGeometryLF.GeometricPoint] Points : Public
    System.Collections.Generic.List`1[ComputationalGeometryLF.TriangulationRegion] Neighbours : Public
Class ComputationalGeometryLF.TriangulatedPolygon: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.GeometricPolygon): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    ComputationalGeometryLF.GeometricPolygon Polygon : Public
    ComputationalGeometryLF.TriangulationRegion TriangleGraphRoot : Public
    System.Collections.Generic.List`1[ComputationalGeometryLF.GeometricSegment] Segments : Public
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class ComputationalGeometryLF.MonoPoint: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.GeometricPoint, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    ComputationalGeometryLF.GeometricPoint Point : Public
    Boolean OnLeftChain : Public
Class ComputationalGeometryLF.Triangulation: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Drawing.Color StartPointColor : Public, Static
    System.Drawing.Color EndPointColor : Public, Static
    System.Drawing.Color SplitPointColor : Public, Static
    System.Drawing.Color MergePointColor : Public, Static
  Methods:
    GetCounterClockwiseOrdered(GeometricPolygon): PrivateScope, Public, Static, HideBySig
    isPolygonMonotoneY(GeometricPolygon): PrivateScope, Public, Static, HideBySig
    TriangulateNaive(GeometricPolygon): PrivateScope, Public, Static, HideBySig
    TriangulateMonotoneY(GeometricPolygon): PrivateScope, Public, Static, HideBySig
    GetPolygonVertexTypes(GeometricPolygon): PrivateScope, Public, Static, HideBySig
    GetTrichromaticPoints(GeometricPolygon): PrivateScope, Public, Static, HideBySig
Class ComputationalGeometryLF.PointInclusion: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsInsidePolygon(GeometricPoint, GeometricPolygon): PrivateScope, Public, Static, HideBySig
    IsInsidePolygon(Double, Double, GeometricPolygon): PrivateScope, Public, Static, HideBySig
    IsInsideConvexPolygon(GeometricPoint, GeometricPolygon): PrivateScope, Public, Static, HideBySig
    IsInsideConvexPolygon(Double, Double, GeometricPolygon): PrivateScope, Public, Static, HideBySig
Class ComputationalGeometryLF.AddObjectForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SecondaryForm
    Void .ctor(CVNetControls.LabelButton): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class ComputationalGeometryLF.ModObjectForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SecondaryForm
    Void .ctor(CVNetControls.LabelButton): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    setObjectIndex(Int32): PrivateScope, Public, HideBySig
    refreshPropertyBoxes(): PrivateScope, Public, HideBySig
Class CVNetControls.TitledControlBase<System::Windows::Forms::Panel>: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.TitledControl<System::Windows::Forms::Panel>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<System::Windows::Forms::Panel>
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Cursor Cursor 'get set' : 
    Boolean HasChildren 'get ' : 
    Boolean ControlAutoSize 'get set' : 
    System.Drawing.Color ControlForeColor 'get set' : 
    System.Drawing.Color ControlBackColor 'get set' : 
    System.Drawing.Font ControlFont 'get set' : 
    System.String ControlText 'get set' : 
    System.Drawing.Size ControlPreferredSize 'get ' : 
    System.String ControlName 'get ' : 
    System.String TitleName 'get ' : 
    System.String Name 'get set' : 
    System.Windows.Forms.Control Parent 'get set' : 
    Int32 ControlHeight 'get set' : 
    Int32 ControlWidth 'get set' : 
    System.Drawing.Size ControlSize 'get set' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlSize(Size): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlWidth(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlHeight(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlName(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlPreferredSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlText(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlText(String): PrivateScope, Public, HideBySig, SpecialName
    get_ControlFont(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlAutoSize(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlAutoSize(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_HasChildren(): PrivateScope, Public, HideBySig, SpecialName
    get_Cursor(): PrivateScope, Public, HideBySig, SpecialName
    set_Cursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class ComputationalGeometryLF.RemoveObjectForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SecondaryForm
    Void .ctor(CVNetControls.LabelButton): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    setObjectIndex(Int32): PrivateScope, Public, HideBySig
Class ComputationalGeometryLF.AlgorithmForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SecondaryForm
    Void .ctor(CVNetControls.LabelButton): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    setObjectIndex(Int32): PrivateScope, Public, HideBySig
Class ComputationalGeometryLF.SettingsForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.SecondaryForm
    Void .ctor(CVNetControls.LabelButton): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledControl<System::Windows::Forms::Panel> > >: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsTitled 'get ' : 
    Boolean IsHandleCreated 'get ' : 
    IntPtr Handle 'get ' : 
    Int32 ControlCentreY 'get ' : 
    Int32 ControlBottom 'get ' : 
    Int32 ControlTop 'get ' : 
    Int32 ControlCentreX 'get ' : 
    Int32 ControlRight 'get ' : 
    Int32 ControlLeft 'get ' : 
    System.Drawing.Point ControlLocation 'get ' : 
    System.Drawing.Color TitleForeColor 'get set' : 
    System.Drawing.Color TitleBackColor 'get set' : 
    System.Windows.Forms.Cursor TitleCursor 'get set' : 
    System.Drawing.Font TitleFont 'get set' : 
    System.String TitleText 'get set' : 
    Int32 TitleCentreY 'get ' : 
    Int32 TitleBottom 'get ' : 
    Int32 TitleTop 'get ' : 
    Int32 TitleCentreX 'get ' : 
    Int32 TitleRight 'get ' : 
    Int32 TitleLeft 'get ' : 
    System.Drawing.Point TitleLocation 'get ' : 
    Int32 TitleHeight 'get ' : 
    Int32 TitleWidth 'get ' : 
    System.Drawing.Size TitleSize 'get ' : 
    System.Drawing.Point MiddleAlignment 'get ' : 
    Int32 MiddleAlignmentY 'get ' : 
    Int32 MiddleAlignmentX 'get ' : 
    System.Drawing.Point Offset 'get set' : 
    Int32 OffsetY 'get set' : 
    Int32 OffsetX 'get set' : 
    Boolean IsTitleVertical 'get set' : 
    Boolean IsTitleHorizontal 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Location 'get set' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
    System.Windows.Forms.Label Title 'get set' : 
  Methods:
    get_Title(): PrivateScope, Public, HideBySig, SpecialName
    set_Title(Label): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsTitleHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitleVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsTitleVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetX(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_OffsetY(): PrivateScope, Public, HideBySig, SpecialName
    set_OffsetY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Offset(): PrivateScope, Public, HideBySig, SpecialName
    set_Offset(Point): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentX(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignmentY(): PrivateScope, Public, HideBySig, SpecialName
    get_MiddleAlignment(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleRight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleTop(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleText(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleText(String): PrivateScope, Public, HideBySig, SpecialName
    get_TitleFont(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleFont(Font): PrivateScope, Public, HideBySig, SpecialName
    get_TitleCursor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleCursor(Cursor): PrivateScope, Public, HideBySig, SpecialName
    get_TitleBackColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleBackColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_TitleForeColor(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleForeColor(Color): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLocation(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlLeft(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlRight(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreX(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlTop(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlBottom(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlCentreY(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName
    get_IsHandleCreated(): PrivateScope, Public, HideBySig, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class CVNetControls.ControlTitledList<CVNetControls::TitledControl<System::Windows::Forms::Panel> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.TitledControlBase<CVNetControls::ControlSingleList<CVNetControls::TitledControl<System::Windows::Forms::Panel> > >
    Void .ctor(System.Windows.Forms.Control): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Count 'get ' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    System.String TitleName 'get set' : 
    Int32 ControlHeight 'get ' : 
    Int32 ControlWidth 'get ' : 
    System.Drawing.Size ControlSize 'get ' : 
  Methods:
    get_ControlSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlWidth(): PrivateScope, Public, HideBySig, SpecialName
    get_ControlHeight(): PrivateScope, Public, HideBySig, SpecialName
    get_TitleName(): PrivateScope, Public, HideBySig, SpecialName
    set_TitleName(String): PrivateScope, Public, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledControl<System::Windows::Forms::Panel>): PrivateScope, Public, HideBySig
    op_Subscript(Int32): PrivateScope, Public, HideBySig, SpecialName
    getAt(Int32): PrivateScope, Public, HideBySig
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVFileIO.DataConverterBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean AreBytesLoaded 'get ' : 
    Boolean IsDataLoaded 'get ' : 
    Byte[] ByteArray 'set' : 
    System.Object DataObject 'set' : 
  Methods:
    set_DataObject(Object): PrivateScope, Public, HideBySig, SpecialName
    set_ByteArray(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_IsDataLoaded(): PrivateScope, Public, HideBySig, SpecialName
    get_AreBytesLoaded(): PrivateScope, Public, HideBySig, SpecialName
    dataToBytes(Byte[]&): PrivateScope, Public, HideBySig
    bytesToData<System::Collections::Generic::List<ComputationalGeometryLF::GeometricObject ^> ^>(List`1&): PrivateScope, Public, HideBySig
Class ComputationalGeometryLF.DataConverter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVFileIO.DataConverterBase
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class ComputationalGeometryLF.MainForm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Windows.Forms.Form
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class CVNetControls.ControlSingleList<CVNetControls::TitledControl<System::Windows::Forms::Panel> >: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :CVNetControls.DynamicControl
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    CVNetControls.IDynamicList
  Properties:
    Boolean IsList 'get ' : 
    Boolean IsTitled 'get ' : 
    Int32 Count 'get ' : 
    System.Windows.Forms.Control Parent 'get set' : 
    System.Drawing.Rectangle Bounds 'get ' : 
    Int32 Height 'get ' : 
    Int32 Width 'get ' : 
    System.Drawing.Size Size 'get ' : 
    System.Drawing.Point Location 'get set' : 
    Int32 CentreY 'get set' : 
    Int32 Bottom 'get set' : 
    Int32 Top  'get set' : 
    Int32 CentreX 'get set' : 
    Int32 Right 'get set' : 
    Int32 Left 'get set' : 
    System.Drawing.Point Spacing 'get set' : 
    Int32 SpacingY 'get set' : 
    Int32 SpacingX 'get set' : 
    Boolean IsListVertical 'get set' : 
    Boolean IsListHorizontal 'get set' : 
    Boolean IsDynamic 'get set' : 
    Boolean Visible 'get set' : 
    Boolean Enabled 'get set' : 
  Methods:
    get_Enabled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Enabled(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Visible(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Visible(Boolean(HasFieldMarshal)): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsDynamic(): PrivateScope, Public, HideBySig, SpecialName
    set_IsDynamic(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListHorizontal(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_IsListVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_IsListVertical(Boolean(HasFieldMarshal)): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingX(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingX(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_SpacingY(): PrivateScope, Public, HideBySig, SpecialName
    set_SpacingY(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Spacing(): PrivateScope, Public, HideBySig, SpecialName
    set_Spacing(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Left(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Left(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Right(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreX(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreX(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Top(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Top(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bottom(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Bottom(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CentreY(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_CentreY(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Location(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Location(Point): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Bounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Parent(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Parent(Control): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsTitled(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IsList(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    add(TitledControl<System::Windows::Forms::Panel>): PrivateScope, Public, HideBySig
    getAt(Int32): PrivateScope, Public, HideBySig
    performLayout(): PrivateScope, Public, HideBySig
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    updateBounds(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlAt(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    fetchControlArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    performHorizontalAlignment(): PrivateScope, Public, HideBySig
    refresh(): PrivateScope, Public, Virtual, HideBySig
Class CVStructures.CVStack<ComputationalGeometryLF::MonoPoint ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsEmpty 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEmpty(): PrivateScope, Public, HideBySig, SpecialName
    push(MonoPoint): PrivateScope, Public, HideBySig
    top(): PrivateScope, Public, HideBySig
    pop(): PrivateScope, Public, HideBySig
Class CVStructures.StackNode<ComputationalGeometryLF::MonoPoint ^>: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(ComputationalGeometryLF.MonoPoint, CVStructures.StackNode<ComputationalGeometryLF::MonoPoint ^>): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    ComputationalGeometryLF.MonoPoint Item : Public
    CVStructures.StackNode<ComputationalGeometryLF::MonoPoint ^> Next : Public
  Properties:
    Boolean IsLast 'get ' : 
  Methods:
    get_IsLast(): PrivateScope, Public, HideBySig, SpecialName
